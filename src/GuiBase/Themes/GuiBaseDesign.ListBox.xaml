<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:control="clr-namespace:GuiBase.Control">

    <Style x:Key="BaseNavigationDrawerListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Height" Value="56" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="control:NavigationALarmCountsAssist.Alarm100Counts" Value="10"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Width" Value="360" />
        <Setter Property="wpf:NavigationDrawerAssist.CornerRadius" Value="20" />
        <Setter Property="wpf:NavigationDrawerAssist.IconSize" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border"
                            ClipToBounds="{TemplateBinding ClipToBounds}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(wpf:NavigationDrawerAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" >
                                </VisualState>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" >
                                </VisualState>
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </Grid.Clip>
                            <Border x:Name="MouseOverBorder"
                      Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Opacity="0" />
                            <Border x:Name="SelectedBorder"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="{Binding ElementName=border,Path=CornerRadius}"              
                      Opacity="0" />
                            <wpf:Ripple Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                          Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                          Focusable="False"
                          RecognizesAccessKey="False"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <DockPanel Margin="0,0,0,0" LastChildFill="False">
                                    <Grid x:Name="IconContainer"
                        Grid.RowSpan="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left">
                                        <wpf:PackIcon x:Name="Icon"
                                  Width="{Binding Path=(wpf:NavigationDrawerAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(wpf:NavigationDrawerAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Kind="{Binding Path=(wpf:NavigationDrawerAssist.SelectedIcon), RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                    <ContentControl x:Name="Text"
                                  Grid.Row="1"
                                  Margin="12,0,0,0"
                                  Padding="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  DockPanel.Dock="Left" />
                                    <StackPanel Orientation="Horizontal"  DockPanel.Dock="Right">
                                        <TextBlock Width="20" Height="20" Margin="0,0,2,0" Background="{StaticResource Alarm100}" Text="{Binding Path=(control:NavigationALarmCountsAssist.Alarm25Counts),RelativeSource={RelativeSource TemplatedParent}}" FontStretch="Medium" TextAlignment="Center" FontSize="12" Foreground="White"/>
                                        <TextBlock Width="20" Height="20" Margin="0,0,2,0" Background="{StaticResource Alarm75}" Text="{Binding Path=(control:NavigationALarmCountsAssist.Alarm50Counts),RelativeSource={RelativeSource TemplatedParent}}" FontStretch="Medium" TextAlignment="Center" FontSize="12" Foreground="Black"/>
                                        <TextBlock Width="20" Height="20" Margin="0,0,2,0" Background="{StaticResource Alarm50}" Text="{Binding Path=(control:NavigationALarmCountsAssist.Alarm75Counts),RelativeSource={RelativeSource TemplatedParent}}" FontStretch="Medium" TextAlignment="Center" FontSize="12" Foreground="Black"/>
                                        <TextBlock Width="20" Height="20" Margin="0,0,2,0" Background="{StaticResource Alarm25}" Text="{Binding Path=(control:NavigationALarmCountsAssist.Alarm100Counts),RelativeSource={RelativeSource TemplatedParent}}" FontStretch="Medium" TextAlignment="Center" FontSize="12" Foreground="Black"/>
                                    </StackPanel>
                                </DockPanel>
                            </wpf:Ripple>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Icon" Property="Kind" Value="{Binding Path=(wpf:NavigationDrawerAssist.UnselectedIcon), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BaseNavigationDrawerPrimaryListBoxItem"
         TargetType="{x:Type ListBoxItem}"
         BasedOn="{StaticResource BaseNavigationDrawerListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
    </Style>
    <Style x:Key="BaseNavigationBageListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Height" Value="56" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Width" Value="360" />
        <Setter Property="wpf:NavigationDrawerAssist.CornerRadius" Value="5" />
        <Setter Property="wpf:NavigationDrawerAssist.IconSize" Value="24" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <wpf:Badged x:Name="badge"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(wpf:NavigationDrawerAssist.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                Badge="{Binding Path=(wpf:BadgedAssist.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                BadgeBackground="{Binding Path=(wpf:BadgedAssist.BadgeBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                BadgeForeground="{Binding Path=(wpf:BadgedAssist.BadgeForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                BadgePlacementMode="{Binding Path=(wpf:BadgedAssist.BadgePlacementMode), RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource MaterialDesignBadge}"                                >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" >
                                </VisualState>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" >
                                </VisualState>
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Border x:Name="MouseOverBorder"
                      Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Opacity="0" />
                            <Border x:Name="SelectedBorder"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Opacity="0" />
                                <wpf:Ripple Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                          Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                          Focusable="False"
                          RecognizesAccessKey="False"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <DockPanel Margin="16,0,16,0" LastChildFill="False">
                                        <Grid x:Name="IconContainer"
                        Grid.RowSpan="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left">
                                            <wpf:PackIcon x:Name="Icon"
                                  Width="{Binding Path=(wpf:NavigationDrawerAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(wpf:NavigationDrawerAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Kind="{Binding Path=(wpf:NavigationDrawerAssist.SelectedIcon), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                        <ContentControl x:Name="Text"
                                  Grid.Row="1"
                                  Margin="12,0,0,0"
                                  Padding="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  DockPanel.Dock="Left" />
                                    </DockPanel>
                            </wpf:Ripple>
                            </Grid>
                    </wpf:Badged>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Icon" Property="Kind" Value="{Binding Path=(wpf:NavigationDrawerAssist.UnselectedIcon), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BaseNavigationBagePrimaryListBoxItem"
         TargetType="{x:Type ListBoxItem}"
         BasedOn="{StaticResource BaseNavigationBageListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
    </Style>

</ResourceDictionary>